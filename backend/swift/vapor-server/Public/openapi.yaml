openapi: "3.1.0"
info:
  title: vapor-source
  version: 1.0.0
servers:
  - url: https://example.com/api
    description: Example service deployment.
  - url: /api
    description: The server hosting this document.
paths:
  /jobs:
    post:
      summary: Create a new job listing
      description: Adds a new job to the server
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
      responses:
        '201':
          description: Job created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  title:
                    type: string
                    description: Title of the created job
                required:
                  - title
        '400':
          description: Invalid input
        '409':
          description: Job with this jobId already exists
        '500':
          description: Server error
components:
  schemas:
    Job:
      type: object
      required:
        - jobId
        - title
        - company
        - location
        - postedDate
        - salary
        - url
        - description
      properties:
        jobId:
          type: string
          description: Unique identifier for the job
        title:
          type: string
          description: Job title
        company:
          type: string
          description: Company offering the position
        location:
          type: string
          description: Job location
        modality:
          type: string
          enum: [In-Office, Hybrid, Remote]
          nullable: true
          description: Work modality
        postedDate:
          type: string
          description: Date when the job was posted
        expiresDate:
          type: string
          nullable: true
          description: Expiration date for the job listing
        salary:
          type: string
          description: Salary information
        url:
          type: string
          description: Link to the original job posting
        minYearsExperience:
          type: integer
          nullable: true
          description: Minimum years of experience required
        minDegree:
          type: string
          enum: [Bachelor's, Master's, Ph.D, Unspecified]
          nullable: true
          description: Minimum degree required
        domain:
          type: string
          enum: [Backend, Full-Stack, AI/ML, Data, QA, Front-End, Security, DevOps, Mobile, 
                 Site Reliability, Networking, Embedded Systems, Gaming, Financial, Other]
          nullable: true
          description: Job domain category
        description:
          type: string
          description: Full job description
        parsedDescription:
          type: string
          nullable: true
          description: Processed version of the job description
        s3Pointer:
          type: string
          nullable: true
          description: Reference to S3 stored full description
        languages:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Language'
        technologies:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/Technology'
    
    Language:
      type: object
      properties:
        id:
          type: integer
          format: uint
          nullable: true
        name:
          type: string
      required:
        - name
    
    Technology:
      type: object
      properties:
        id:
          type: integer
          format: uint
          nullable: true
        name:
          type: string
      required:
        - name